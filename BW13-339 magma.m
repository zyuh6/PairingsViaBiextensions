function double(a, P)
   X := P[1];
   Z := P[2];
   XP2 := X^2;
   ZP2 := Z^2;
   b := a * ZP2;
   X2 := (XP2 - b)^2;
   c := 4*X*Z;
   Z2 := c*(XP2 + b);
   return X2, Z2;
end function;

function diff_add(a, P, Q, ixPmQ)
    XP := P[1];
    ZP := P[2];
    XQ := Q[1]; 
    ZQ := Q[2];
    XPZQ := XP*ZQ;
    XQZP := XQ*ZP;
    b := (XP + ZP)*(XQ - a*ZQ) - XQZP + a*XPZQ;
    c := b^2;
    d := (XPZQ - XQZP)^2;
    XPQ := c * ixPmQ;
    ZPQ := d;
    return XPQ, ZPQ;
end function;

//cubical ladder
function ladder3(n, a, P, Q, PQ, ixP, ixQ, ixPQ)
    XnQ := Q[1];
    ZnQ := Q[2];
    XnQQ, ZnQQ := double(a, Q);
    XPnQQ, ZPnQQ := diff_add(a, PQ, Q, ixP);
    if n eq 2 then
        return (XnQQ, ZnQQ), (XPnQQ, ZPnQQ);
    end if;
    nbits := Reverse(Intseq(n - 1, 2));
    for bit := 2 to #nbits do
        XR, ZR := diff_add(a, [XnQQ, ZnQQ], [XnQ, ZnQ], ixQ);
        if nbits[bit] eq 0 then
            XPnQQ, ZPnQQ := diff_add(a, [XPnQQ, ZPnQQ], [XnQ, ZnQ], ixPQ);
            XnQ, ZnQ := double(a, [XnQ, ZnQ]);
            XnQQ := XR;
            ZnQQ := ZR;
        else
            XPnQQ, ZPnQQ := diff_add(a, [XPnQQ, ZPnQQ], [XnQQ, ZnQQ], ixP);
            XnQQ, ZnQQ := double(a, [XnQQ, ZnQQ]);
            XnQ := XR;
            ZnQ := ZR;
        end if;
    end for;
    return XnQQ, ZnQQ, XPnQQ, ZPnQQ;
end function;


function biext_ladder(n, a, xP, xQ, xPQ)
    xPxQ := xP*xQ;
    xPxQxPQ := xPxQ*xPQ;
    ixPxQxPQ := 1/xPxQxPQ;
    ixPQ := xPxQ * ixPxQxPQ;
    ixPxQ := xPQ * ixPxQxPQ;
    ixP := xQ * ixPxQ;
    ixQ := xP * ixPxQ;
    P := [xP, 1];
    Q := [xQ, 1];
    PQ := [xPQ, 1];
    XnQ, ZnQ, XPnQ, ZPnQ := ladder3(n, a, P, Q, PQ, ixP, ixQ, ixPQ);
    return  XnQ, ZnQ, XPnQ, ZPnQ;
end function;


p := 619300814658137021911735118571625966312903695465846802250078967320010471996324365252212273732856454481; 
r := 74579796814403033717091538883746780469914487782782964041412570862239392511597;
t := -6702920;
lamb := t - 1;
Fp :=GF(p);
Fp13<u>:=ExtensionField<Fp,u|u^13 + 3*u + 3>;
E:= EllipticCurve([Fp|11,0]);
E13 := EllipticCurve([Fp13|11,0]);
P := E13![226487158090352102609566361476966340941898979615415199175478318388215356046171572253578323794782531887, 86469335647927249374179782787299198113985434748373643109902008892845546353927071875047153168691173586]; 
Q := E13![133395560151832966318245640540331961548884987818666705173783954941770458985395118285547591030118909327*u^12 + 495276878566835477766659103979322199723959064896329382840048039281891499443516453129335656973531325509*u^11 + 263822240136315074070832232200090235731007423659926026645860385091778457198267462151365537884171679569*u^10 + 167660974342328772894761518464005598625116622727823319714382026098802216145054916271667285782487646294*u^9 + 221997408523971965237149133377137109025483592525320592019597217947983847081142214228483100177495221740*u^8 + 485777712709969761258009513328761476714668926705380560243479685416424288344444280810322044064542145364*u^7 + 146928421929061509098959917020646408350318766305814574586920704471316874519770720739650085957110962772*u^6 + 261126541057733053224482807597458088140996928016567922820354165845088526061630322249606098037052831652*u^5 + 163135665418767369343843391598149330134997615871193427316117056384983869218906646939826505149176801156*u^4 + 13807591754423610141794369872054381778792717486887854573230920133401786450892586604249724577850926296*u^3 + 351299032312093525243977842847642176431193144932320636113733020507087614532937980801529248427414900389*u^2 + 84979836354087821153012562058904349245311378229987414274296541358307952274210592469896105030868570359*u + 306013320851542800347589086316417350364455302187233144275199093791151468781100917162564983787930902578, 
167408434400750428994675123346385218853954244950411607482944539395390639103709487846933192423859856525*u^12 + 487433539726900519491017198103217369827358139928330984555304215649970541657148186493510583364241058781*u^11 + 442438401703681342941333005578148269093847924024904077728716699627583898394758294084647997046238598942*u^10 + 462975546385882072446604606454595504028252927601582509796430495870605250756525345922828805512601887170*u^9 + 372941195258068727616224926797750675540511780707146487726742537715405123659009217937388767396770102243*u^8 + 389297806306993225322344336914667616188333915896981504645648996508010113347951231264300719885168989992*u^7 + 607124529963499487042262442649576973688283637769925723194717499615069016867843042313897775703037716407*u^6 + 372846860460781910410909935419548941472686148351926302250727775058078727345415488607853155085348363533*u^5 + 255472055072485918191773045722509416044350290340963355598664775369154897303302201874123989317014292844*u^4 + 471832366100672735780032156513418993963901642939701940177257124192426464419087302507423656419455736338*u^3 + 241556694080339108982068262785913575274239089475526400573203637878373183110904280996780410891546059498*u^2 + 285865288142851642776531606040119434456972626339349522770528999437386250074065633214284577443885814024*u + 557730296241702123721769157178528404670996982203057084159464258125904517678780463111779583849656515805];
a := Fp13!11;
P1 := P;
P2 := 2*P;
xP := P[1];
xQ := Q[1];
xPQ := (P + Q)[1];
lamb := 234810036286416427383770702623421784988945869;
//final exponentiation
f := 26430189142774585170602041456171206174594496559171456165466478328515012941846001607851901170634322752711690843617742143475078724580100333393150808657058965599363387144126360051753866218780337336632994879307321867459564059948352092728752447837016345561516672076023079078702299628033552369471920116563389289294130009830748637661021994858785046998537206719491942544363095249751181766921022628892080409437552925269140815004153708799104919504326759484635107432904371706115582373756639352505584002041883752380000298942327705960522079971962856515052933532575382761032981055438629235367630200074591505079760439828541944761666472865294466060242853265125567362832776057563203960450346310084703360403232092140373292792307869400912876569866339879602871876479962483192987382056076215457620622336231974296255433666775610392824126372449441181985689702525073264691661486820828553264220196213609653792401664179995377696696342884621821564056352395591875253001384931025461686292852609362815885094330926517866444691802624910520222813107655883810162507400258200718123176977812861715055503215305466496597842355743464273003498792458770360145976025061664683301602480678000517930964001713990600546461542532727723844788323831539524421690330482221576465637709062054791773520;

//pairing BW13-339
function pbw13(Q,P)
    Q:=-Q;    //in order to compute [-z]Q = [z](-Q)
    phi1P := E13![-P[1],-478409352685073594710807296516127188384795780812266107976373809434991802337621287096662880581456395*P[2]];
    phi1Q := E13![-Q[1],-478409352685073594710807296516127188384795780812266107976373809434991802337621287096662880581456395*Q[2]];
    phi1Pphi1Q := phi1P + phi1Q;
    phi1PQ := phi1P + Q;
    xP := P[1];
    xQ := Q[1];
    xPQ := (P + Q)[1];
    xphi1P := phi1P[1];
    xphi1Q := phi1Q[1];
    xphi1Pphi1Q := phi1Pphi1Q[1];
    xphi1PQ := phi1PQ[1];

    n:=2589;
    XnQ, ZnQ, XPnQ, ZPnQ:=biext_ladder(n, a, xP, xQ, xPQ);
    XnQ0, ZnQ0, Xphi1PnQ, Zphi1PnQ:=biext_ladder(n, a, xphi1P, xQ, xphi1PQ);
    
    result:=( ZnQ^(n+p^7) * (xP-xQ)^(2*p) ) / (ZPnQ^n * Zphi1PnQ^(p^7));
    return result^f;
end function;

if pbw13(Q*23,P) eq pbw13(Q,P)^23 and pbw13(Q,P*23) eq pbw13(Q,P)^23 then
    printf "bilinear\n";
else
    printf "non-bilinear\n";
end if;
if pbw13(Q, P) eq 1 then
    printf "degenerate\n";
else
    printf "non-degenerate\n";
end if;